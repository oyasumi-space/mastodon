- content_for :page_title do
  = t('settings.preferences')

- content_for :heading_actions do
  = button_tag t('generic.save_changes'), class: 'button', form: 'edit_preferences'

= simple_form_for current_user, url: settings_preferences_other_path, html: { id: :edit_preferences } do |f|
  = render 'shared/error_messages', object: current_user

  = f.simple_fields_for :settings, current_user.settings do |ff|
    .fields-group
      = ff.input :aggregate_reblogs,
                 hint: I18n.t('simple_form.hints.defaults.setting_aggregate_reblogs'),
                 label: I18n.t('simple_form.labels.defaults.setting_aggregate_reblogs'),
                 recommended: true,
                 wrapper: :with_label

    .fields-group
      = ff.input :lock_follow_from_bot, wrapper: :with_label, kmyblue: true, label: I18n.t('simple_form.labels.defaults.setting_lock_follow_from_bot')

    %h4= t 'preferences.posting_defaults'

    .fields-row
      .fields-group.fields-row__column.fields-row__column-12
        = ff.input :default_language,
                   collection: [nil] + filterable_languages,
                   hint: false,
                   include_blank: false,
                   label_method: ->(locale) { locale.nil? ? I18n.t('statuses.default_language') : native_locale_name(locale) },
                   label: I18n.t('simple_form.labels.defaults.setting_default_language'),
                   required: false,
                   wrapper: :with_label

    .fields-group
      = ff.input :default_sensitive,
                 hint: I18n.t('simple_form.hints.defaults.setting_default_sensitive'),
                 label: I18n.t('simple_form.labels.defaults.setting_default_sensitive'),
                 wrapper: :with_label

    - if Setting.enable_emoji_reaction
      .fields-group
        = ff.input :stop_emoji_reaction_streaming, as: :boolean, wrapper: :with_label, kmyblue: true, label: I18n.t('simple_form.labels.defaults.setting_stop_emoji_reaction_streaming'), hint: I18n.t('simple_form.hints.defaults.setting_stop_emoji_reaction_streaming')

    - if @dtl_enabled

      %h4= t 'preferences.dtl'

      %p.hint= t 'preferences.dtl_hint', tag: @dtl_tag

      .fields-group
        = ff.input :'web.enable_dtl_menu', wrapper: :with_label, kmyblue: true, label: I18n.t('simple_form.labels.defaults.setting_dtl_menu')

      .fields-group
        = ff.input :dtl_force_visibility,
                   as: :radio_buttons,
                   collection: %w(unchange public public_unlisted unlisted),
                   collection_wrapper_tag: 'ul',
                   hint: I18n.t('simple_form.hints.defaults.setting_dtl_force_visibility', tag: @dtl_tag),
                   item_wrapper_tag: 'li',
                   kmyblue: true,
                   label: I18n.t('simple_form.labels.defaults.setting_dtl_force_visibility'),
                   label_method: ->(item) { safe_join([t("simple_form.labels.dtl_force_visibility.#{item}")]) },
                   wrapper: :with_floating_label

      .fields-group
        = ff.input :dtl_force_searchability,
                   as: :radio_buttons,
                   collection: %w(unchange public public_unlisted),
                   collection_wrapper_tag: 'ul',
                   hint: I18n.t('simple_form.hints.defaults.setting_dtl_force_searchability', tag: @dtl_tag),
                   item_wrapper_tag: 'li',
                   kmyblue: true,
                   label: I18n.t('simple_form.labels.defaults.setting_dtl_force_searchability'),
                   label_method: ->(item) { safe_join([t("simple_form.labels.dtl_force_searchability.#{item}")]) },
                   wrapper: :with_floating_label

  %h4= t 'preferences.public_timelines'

  .fields-group
    = f.input :chosen_languages,
              as: :check_boxes,
              collection_wrapper_tag: 'ul',
              collection: filterable_languages,
              include_blank: false,
              item_wrapper_tag: 'li',
              label_method: ->(locale) { native_locale_name(locale) },
              required: false,
              wrapper: :with_block_label

  .actions
    = f.button :button, t('generic.save_changes'), type: :submit
